const CSDS = require('./csds-cache');
const axios = require('axios');
const {_cleanAxiosErrorForLogging} = require("./axiosHelper");

async function getAppJwt({accountId, clientId, clientSecret}) {

    // first get the service domain
    const host = await CSDS.lookup(accountId, CSDS.ServiceName.sentinel);
    const url = `${CSDS.defaultHttpProtocol}://${host}/sentinel/api/account/${accountId}/app/token?v=1.0&grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`;

    try {
        const res = await axios({
            method: 'post',
            url,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        });
        return res.data['access_token'];

    } catch (err) {
        // catch axios errors, clean up and re-throw
        throw _cleanAxiosErrorForLogging(err);
    }
}

module.exports = {getAppJwt};

// to get the clientId/Secret:
// https://z1-a.houston.int.liveperson.net/fetch/
// https://va-a.ac.liveperson.net/api/account/20619672/configuration/app-install/installations?v=1.0

/*

1. Request the Sentinel Server for an AppJWT

POST
https://${host_appJWT}/sentinel/api/account/${brandId}/app/token?v=1.0&grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}

Accept: application/json
Content-Type: application/x-www-form-urlencoded

RES
appJWT = $.access_token

---------------------------------------

To get an appJWT an account needs a clientId and clientSecret, these are generated when an app is installed:

1. Through houston goto "App Management".

2. In the "App installation" tab, paste the below json. Maybe remove the webhooks if you don't need notifications

3. The "private installed apps" will have the the id/secret.

{
  "client_name": "lp-maam",
  "description": "The lp-maam service transforms a mail into a LiveEngage message",
  "grant_types": [
    "client_credentials"
  ],
  "scope": "msg.consumer",
  "logo_uri": "/src/modules/campaigns/assets/img/software/Mobile-App.png",
  "capabilities": {
    "webhooks": {
      "ms.MessagingEventNotification.ContentEvent": {
        "endpoint": "https://va-a.maam.liveperson.net/v1/webhooks/content-event",
        "max_retries": 3
      },
      "ms.MessagingEventNotification.RichContentEvent": {
        "endpoint": "https://va-a.maam.liveperson.net/v1/webhooks/content-event",
        "max_retries": 5
      },
      "ms.MessagingEventNotification.AcceptStatusEvent": {
        "endpoint": "https://va-a.maam.liveperson.net/v1/webhooks/content-event",
        "max_retries": 1
      },
      "ms.MessagingEventNotification.ChatStateEvent": {
        "endpoint": "https://va-a.maam.liveperson.net/v1/webhooks/content-event"
      },
      "cqm.ExConversationChangeNotification": {
        "endpoint": "https://va-a.maam.liveperson.net/v1/webhooks/content-event"
      }
    },
    "engagement": {
      "design_engagement": false,
      "design_window": false,
      "entry_point": [
        "section"
      ],
      "visitor_behavior": [
        "visited_location",
        "time_on_location",
        "flow",
        "engaged_in_session",
        "about_to_abandon",
        "cart_value",
        "cart_items",
        "visitor_error",
        "viewed_products",
        "service_activity"
      ],
      "target_audience": [
        "external_referral",
        "search_keywords",
        "ip",
        "platform",
        "geo_location",
        "returning_visitors",
        "marketing_source",
        "customer_type",
        "age",
        "balance",
        "customer_id",
        "gender",
        "store_zip_code",
        "store_number",
        "company_size",
        "registration_date"
      ],
      "goal": [
        "url",
        "purchase_total",
        "num_of_pages",
        "lead",
        "service_activity"
      ],
      "consumer_identity": [
        "auth"
      ],
      "language_selection": false
    }
  },
  "enabled": true
}


*/
