
function _cleanAxiosErrorForLogging(error) {
    if (error.response) {
        error.response.request = {
            _header: (error.response.request && error.response.request._header) ? error.response.request._header : ''
        };
    }

    if (error.request) {
        error.request = {
            _currentRequest: {
                _header: (error.request && error.request._currentRequest && error.request._currentRequest._header) ? error.request._currentRequest._header : ''
            }
        };
    }

    if (error.config && error.config.data) {
        try {
            const configData = JSON.parse(error.config.data);

            if (configData.username && configData.password) {
                const username = configData.username.replace(/./g, '*');
                const password = configData.password.replace(/./g, '*');

                error.config.data = {username, password}
            }
        } catch (err) {
            // this just means config.data is not a JSON, continue
        }
    }

    // Wrap in an error since axios does not add a stack
    const err = new Error(error.message);

    // add other values
    if (error.config) err.config = error.config;
    if (error.request) err.request = error.request;
    if (error.response) err.response = error.response;

    return err;
}

module.exports = {_cleanAxiosErrorForLogging};
