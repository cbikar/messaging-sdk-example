const axios = require('axios');
const CSDS = require('./csds-cache');
const {_cleanAxiosErrorForLogging} = require("./axiosHelper");

/**
 * AC Connectors module for connecting to account configuration platform
 * @module ac-connectors
 * @category Services
 */

/**
 * Retrieve the connector details for an account
 * @param {string} accountId
 * @returns {Object} type of connector for the account (e.g. unauth implicit)
 */
async function getConnectors(accountId) {

    const domain = await CSDS.lookup(accountId, CSDS.ServiceName.acCdnDomain);
    const url = `${CSDS.defaultHttpProtocol}://${domain}/api/account/${accountId}/configuration/le-connectors/all-connectors`;

    try {
        const res = await axios.get(url);
        // headers: {
        //     //'Authorization': `Bearer ${a.token}`,
        //     'User-Agent': 'Apache-HttpClient/4.5.6 (Java/1.8.0_191)'

        // parse the output into a map
        let map = {};
        res.data.forEach(o => {
            map[o.type.toString()] = o;
        });
        return map;
    }

    catch (error) {
        if (error.message === 'The requested resource could not be found but may be available again in the future.') {
            throw new Error('No available connectors, need to create ACR-0 Connector through Houston');
        }
        // catch axios errors, clean up and re-throw
        throw _cleanAxiosErrorForLogging(error);
    }
}

module.exports = {
    getConnectors
};
