const Connection = require('./connection');
const ConnectionState = require('./connection-state');

class RestConnection extends Connection {
    constructor(a) {
        super(a);

        this.token = a.token || null;

        // Users can pass in an appId and appVersion.  This is sent to UMS and will be trackable
        // in UMS web tier logs and wil later have metrics when UMS implements
        // https://jira.liveperson.com/browse/CO-5522
        this.appId = a.appId;
        this.appVersion = a.appVersion;
    }

    get api() {
        return null;
    }

    async open() {

        // CONNECTING
        this.state = ConnectionState.CONNECTING;

        // if a token was not passed in, init it
        if (this.token === null) {
            await this._initToken();
        }

        // state must be connected here in order for send to work
        this.state = ConnectionState.CONNECTED;
    }

    async close() {
        await super.close();

        this.state = ConnectionState.CLOSED;
    }

    /**
     * Generates an auth token based on the {@link UserType}
     * @protected
     * @abstract
     */
    async _initToken() {
        throw new Error('_initToken is not implemented');
    }

    /**
     * Returns the token from this connection
     * @abstract
     */
    async getToken() {
        throw new Error('getToken is not implemented');
    }

}

module.exports = RestConnection;
