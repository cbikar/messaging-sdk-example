const WsApiVersion = {
    V2: 'WSv2',
    V3: 'WSv3'
}

/**
 * @typedef {Object} WsApiRequest
 */

const v2 = {
    version: WsApiVersion.V2,

    // 1xx - general
    getClock: require('./general/get-clock').v2,
    getDownloadUrl: require('./general/get-download-url').v2,
    getUploadUrl: require('./general/get-upload-url').v2,

    // 2xx - conversation
    subscribeExConversations: require('./conversation/subscribe-ex-conversations').v2,
    unsubscribeExConversations: require('./conversation/unsubscribe-ex-conversations').v2,
    // updateConversationField: require('./conversation/update-conversation-field/update-conversation-field').v2, // not used directly
    consumerTakeover: require('./conversation/update-conversation-field/consumer-takeover').v2,
    transferConversation: require('./conversation/update-conversation-field/transfer-conversation').v2,
    conversationStateField: require('./conversation/update-conversation-field/conversation-state-field').v2,
    participantsChange: require('./conversation/update-conversation-field/participants-change').v2,
    dialogChange: require('./conversation/update-conversation-field/dialog-change').v2,
    noteUpdate: require('./conversation/update-conversation-field/note-update').v2,
    ttrUpdate: require('./conversation/update-conversation-field/ttr-update').v2,
    manualETTRUpdate: require('./conversation/update-conversation-field/manualettr-update').v2,

    // 3xx - profile
    setAgentState: require('./profile/set-agent-state').v2,
    getBrandProfile: require('./profile/get-brand-profile').v2,
    getUserProfile: require('./profile/get-user-profile').v2,

    // 4xx - messaging
    //publishEvent: require('./messaging/publish-event').publishEvent.v2,
    contentEvent: require('./messaging/content-event').v2,
    richContentEvent: require('./messaging/rich-content-event').v2,
    acceptStatusEvent: require('./messaging/accept-status-event').v2,
    chatStateEvent: require('./messaging/chat-state-event').v2,
    queryMessages: require('./messaging/query-messages').v2,

    // 5xx - routing
    subscribeRoutingTasks: require('./routing/subscribe-routing-tasks').v2,
    updateRingState: require('./routing/update-ring-state').v2,

    // notifications
    notificationTypes: {
        ExConversationChangeNotification: '.ams.aam.ExConversationChangeNotification',
        MessagingEventNotification: '.ams.ms.OnlineEventDistribution',
        RoutingTaskNotification: '.ams.routing.RoutingTaskNotification'
    },

    ConversationState: require('./conversation/subscribe-ex-conversations').ConversationState
};

const v3 = {
    version: WsApiVersion.V3,

    // 1xx - general
    getClock: require('./general/get-clock').v3,
    initConnection: require('./general/init-connection').v3,
    getDownloadUrl: require('./general/get-download-url').v3,
    getUploadUrl: require('./general/get-upload-url').v3,

    // 2xx - conversation
    subscribeExConversations: require('./conversation/subscribe-ex-conversations').v3,
    unsubscribeExConversations: require('./conversation/unsubscribe-ex-conversations').v3,
    consumerRequestConversation: require('./conversation/consumer-request-conversation').v3,
    // updateConversationField: require('./conversation/update-conversation-field/update-conversation-field').v3, // not used directly
    consumerTakeover: require('./conversation/update-conversation-field/consumer-takeover').v3,
    transferConversation: require('./conversation/update-conversation-field/transfer-conversation').v3,
    conversationStateField: require('./conversation/update-conversation-field/conversation-state-field').v3,
    participantsChange: require('./conversation/update-conversation-field/participants-change').v3,
    dialogChange: require('./conversation/update-conversation-field/dialog-change').v3,
    updateCsat: require('./conversation/update-conversation-field/update-csat').v3,
    ttrUpdate: require('./conversation/update-conversation-field/ttr-update').v3,

    // 3xx - profile
    setAgentState: require('./profile/set-agent-state').v3,
    setUserProfile: require('./profile/set-user-profile').v3,
    getBrandProfile: require('./profile/get-brand-profile').v3,
    getUserProfile: require('./profile/get-user-profile').v3,

    // 4xx - messaging
    subscribeMessagingEvents: require('./messaging/subscribe-messaging-events').v3,
    //publishEvent: require('./messaging/publish-event').publishEvent.v3,
    contentEvent: require('./messaging/content-event').v3,
    richContentEvent: require('./messaging/rich-content-event').v3,
    acceptStatusEvent: require('./messaging/accept-status-event').v3,
    chatStateEvent: require('./messaging/chat-state-event').v3,

    // notifications
    notificationTypes: {
        ExConversationChangeNotification: 'cqm.ExConversationChangeNotification',
        MessagingEventNotification: 'ms.MessagingEventNotification'
    },

    ConversationState: require('./conversation/subscribe-ex-conversations').ConversationState
};

module.exports = {v2, v3, WsApiVersion};

/*
    enums of request types from UMS code: (code, v2, v3)

    // General
    GET_CLOCK(100,".GetClock", "GetClock"),
    INIT(101,"InitConnection", "InitConnection"),

    // conversation
    SUBSCRIBE_EX_CONVERSATIONS(200,".ams.aam.SubscribeExConversations", "cqm.SubscribeExConversations"),
    UNSUBSCRIBE_EX_CONVERSATIONS(201,".ams.aam.UnsubscribeExConversations", "cqm.UnsubscribeExConversations"),
    UPDATE_EX_CONVERSATION_SUBSCRIPTION(202,".ams.aam.UpdateExConversationSubscription", "cqm.UpdateExConversationSubscription"),
    REQUEST_CONVERSATION(203,".ams.cm.types.RequestConversation","cm.RequestConversation"),
    CONSUMER_REQUEST_CONVERSATION(204,".ams.cm.ConsumerRequestConversation", "cm.ConsumerRequestConversation"),
    AGENT_REQUEST_CONVERSATION(205,".ams.cm.AgentRequestConversation", "cm.AgentRequestConversation" ),
    SUBSCRIBE_CONVERSATIONS(206,".ams.cm.SubscribeConversations", "cm.SubscribeConversations"),
    UNSUBSCRIBE_CONVERSATIONS(207,".ams.cm.UnsubscribeConversations", "cm.UnsubscribeConversations" ),
    UPDATE_CONVERSATION_FIELD(208,".ams.cm.UpdateConversationField", "cm.UpdateConversationField"),

    EX_CONVERSATION_CHANGE_NOTIFICATION(209,".ams.aam.ExConversationChangeNotification", "cqm.ExConversationChangeNotification"),
    CONVERSATION_CHANGE_NOTIFICATION(210,".ams.cm.ConversationChangeNotification", "cm.ConversationChangeNotification"),


    // Profile
    GET_BRAND_PROFILE(300,".ams.brandprofile.GetBrandProfile", "brandprofile.GetBrandProfile"),
    GET_BRANDS(301,".ams.brandprofile.GetBrands", ".ams.brandprofile.GetBrands"), // TODO: check what is it
    SET_BRAND_PROFILE(302,".ams.brandprofile.SetBrandProfile", "brandprofile.SetBrandProfile"),
    GET_USER_PROFILE(303,".ams.userprofile.GetUserProfile", "userprofile.GetUserProfile"),
    SET_USER_PROFILE(304,".ams.userprofile.SetUserProfile", "userprofile.SetUserProfile"),
    SET_AGENT_STATE(305, ".ams.routing.SetAgentState", "rs.SetAgentState"),

    // messaging
    PUBLISH_EVENT(400,".ams.ms.PublishEvent", "ms.PublishEvent"),
    QUERY_MESSAGES(401,".ams.ms.QueryMessages", ".ams.ms.QueryMessages"), // not supported in V3
    ONLINE_EVENT_DISTRIBUTION(402,".ams.ms.OnlineEventDistribution", "ms.MessagingEventNotification"),
    GENERATE_URL_FOR_UPLOAD_FILE(450, ".ams.ms.GenerateURLForUploadFile", "ms.GenerateURLForUploadFile"),
    GENERATE_URL_FOR_DOWNLOAD_FILE(451, ".ams.ms.GenerateURLForDownloadFile", "ms.GenerateURLForDownloadFile"),
    SUBSCRIBE_MESSAGING_EVENTS (453, "ms.SubscribeMessagingEvents", "ms.SubscribeMessagingEvents"),
    GENERATE_URL(452, ".ams.ms.BaseGenerateURL","ms.GenerateURL"),
    UNSUBSCRIBE_BODY (454, ".ams.UnsubscribeBody",".ams.UnsubscribeBody"), // for appJWT - meanwhile not in use
    MESSAGING_EVENTS_NOTIFICATION(455, "ms.MessagingEventNotification", "ms.MessagingEventNotification"),
    GENERATE_UPLOAD_TOKEN(456, ".ams.ms.token.GenerateUploadToken", "ms.GenerateUploadToken"),
    GENERATE_UPLOAD_TOKEN_RESP(457, ".ams.ms.token.GenerateUploadToken", "ms.UploadToken"),
    GENERATE_DOWNLOAD_TOKEN(458, ".ams.ms.token.GenerateDownloadToken", "ms.GenerateDownloadToken"),
    GENERATE_DOWNLOAD_TOKEN_RESP(459, ".ams.ms.token.GenerateDownloadToken", "ms.DownloadToken"),

    //routing
    UPDATE_RING_STATE(500,".ams.routing.UpdateRingState", "rs.UpdateRingState"),
    //@Deprecated RingUpdate will not send to CM since UMS version 3.5
    //RING_UPDATED(501,".ams.routing.RingUpdated",".ams.routing.RingUpdated"), // seems like it is not in use in any tests...
    SUBSCRIBE_ROUTING_TASKS(502,".ams.routing.SubscribeRoutingTasks", "rs.SubscribeRoutingTasks"),
    ROUTING_TASK_NOTIFICATION(503,".ams.routing.RoutingTaskNotification", "rs.RoutingTaskNotification"),
    SUBSCRIBE_AGENTS_STATE(504,".ams.routing.SubscribeAgentsState", "rs.SubscribeAgentsState"),
    AGENT_STATE_NOTIFICATION(505,".ams.routing.AgentStateNotification", "rs.AgentStateNotification"),

    // Generic
    REQUEST_BODY_RESP(600, ".ReqBody$StringResp", "StringResponse"),
    GENERIC_SUBSCRIBE(601, ".ams.GenericSubscribe", "GenericSubscribe"),
    CLOSE(602, "CLOSE", "CLOSE"),
    BAD_REQUEST(603, ".ReqBody$StringResp", "StringResponse");

 */
