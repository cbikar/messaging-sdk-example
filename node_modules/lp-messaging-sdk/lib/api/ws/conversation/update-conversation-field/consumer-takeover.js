const {updateConversationField, v2Context, v3Context} = require('./update-conversation-field');
const {participantsChangeData} = require('./participants-change');
const ParticipantRole = require('../../../../conversation/participant-role');
const ParticipantChangeType = require("../../../../conversation/participant-change-type");

/**
 * Transfers a conversation from one consumerId to another. After consumer step-up, any existing in process conversations need to be given the new consumer userId.
 * @private
 * @param {string} conversationId
 * @param {string} removeUserId - the consumer userId which will be removed from the conversation
 * @param {string} addUserId - the consumer userId which will be added to the conversation
 * @returns {WsApiRequest}
 */
function consumerTakeover(
    {
        conversationId,
        removeUserId = null,
        addUserId = null
    } = {}) {

    if (removeUserId === null) {
        throw new Error('consumerTakeover missing removeUserId');
    }

    if (addUserId === null) {
        throw new Error('consumerTakeover missing addUserId');
    }

    const data = [
        participantsChangeData(removeUserId, ParticipantRole.CONSUMER, ParticipantChangeType.REMOVE),
        participantsChangeData(addUserId, ParticipantRole.CONSUMER, ParticipantChangeType.ADD)
    ];

    return updateConversationField.call(this, conversationId, data);
}

module.exports = {
    v2: consumerTakeover.bind(v2Context),
    v3: consumerTakeover.bind(v3Context)
};
